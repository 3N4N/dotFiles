# Author: Enan Ajmain
# Email : 3nan.ajmain@gmail.com
# Github: https://github.com/enanajmain

# -- general -------------------------------------------------------------------

set -g escape-time 10           # wait 10ms after Esc key
set -g repeat-time 500          # wait 100ms for repeating command
set -g focus-events on
set -g set-clipboard off
set -g history-limit 5000

set -g default-terminal "st-256color"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

set -g set-titles on
set -g set-titles-string "#T"

# -- display -------------------------------------------------------------------

set -g base-index 1             # start windows numbering at 1
set -g pane-base-index 1        # make pane numbering consistent with windows

set -g allow-rename off
set -g renumber-windows on      # re-number windows when a window is closed

set -g display-panes-time 800   # slightly longer pane indicators display time
set -g display-time 500         # slightly longer status messages display time

set -g status-interval 10       # redraw status line every 10 seconds

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g monitor-activity off
set -g bell-action none

# -- key bindings --------------------------------------------------------------

# set prefix
unbind C-b
set -g prefix C-Space

# easy config reloads
unbind r
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# get into command mode easily
bind \; command-prompt

# toggle mouse
set -g mouse on
bind m set -g mouse \; display 'Mouse #{?mouse,enabled,disabled}'

# vim style mode
set -g mode-keys vi
set -g status-keys emacs
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# create session
bind C-c new-session

# synchronize panes i.e. send same keycords to every panes in this window
bind S set synchronize-panes \; display 'Synchronization#{?pane_synchronized, on, off}'

# don't display previous window/session name when renaming
bind , command-prompt -p "rename-window from '#W' to" "rename-window '%%'"
bind '$' command-prompt -p "rename-session from '#S' to" "rename-session '%%'"

# session switcher
bind s choose-tree -s -Z -F '#{?pane_format,#{pane_current_command},\
	#{?window_format,#{window_name},#{?session_grouped,\
	(group #{session_group}: #{session_group_list}),}#{?session_attached,(attached),}}}'

# window switcher
bind w choose-tree -w -Z -f '#{session_attached}' \
	-F '#{?pane_format,#{pane_current_command},\
	#{?window_format,#{window_name},#{?session_grouped,\
	(group #{session_group}: #{session_group_list}),}}}'

# window and session switching
unbind p
unbind n
bind j next-window
bind k previous-window
bind h switch-client -p
bind l switch-client -n
bind p last-window

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# pane splitting
bind v split-window -bh -c "#{pane_current_path}"
bind b split-window -bv -c "#{pane_current_path}"

# movement of windows with prefix+</>
bind -r < swap-window -t -1
bind -r > swap-window -t +1

# -- vim tmux navigator --------------------------------------------------------

bind -n C-h run \
         "((tmux list-panes -F '#F' | grep -q Z && tmux send-keys C-h) || \
         ((tmux display-message -p '#{pane_current_command}' | grep -iq vim \
           && tmux send-keys C-h) || tmux select-pane -L ))"
bind -n C-j run \
         "((tmux list-panes -F '#F' | grep -q Z && tmux send-keys C-j) || \
         ((tmux display-message -p '#{pane_current_command}' | grep -iq vim \
           && tmux send-keys C-j) || tmux select-pane -D ))"
bind -n C-k run \
         "((tmux list-panes -F '#F' | grep -q Z && tmux send-keys C-k) || \
         ((tmux display-message -p '#{pane_current_command}' | grep -iq vim \
           && tmux send-keys C-k) || tmux select-pane -U ))"
bind -n C-l run \
         "((tmux list-panes -F '#F' | grep -q Z && tmux send-keys C-l) || \
         ((tmux display-message -p '#{pane_current_command}' | grep -iq vim \
           && tmux send-keys C-l) || tmux select-pane -R ))"
bind -n C-\ select-pane -l

bind -T copy-mode-vi C-h run "(tmux list-panes -F '#F' | grep -q Z || tmux select-pane -L)"
bind -T copy-mode-vi C-j run "(tmux list-panes -F '#F' | grep -q Z || tmux select-pane -D)"
bind -T copy-mode-vi C-k run "(tmux list-panes -F '#F' | grep -q Z || tmux select-pane -U)"
bind -T copy-mode-vi C-l run "(tmux list-panes -F '#F' | grep -q Z || tmux select-pane -R)"
bind -T copy-mode-vi C-\ select-pane -l

# rebind shadowed keys in bash
bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'
bind C-k send-keys 'C-k'
bind C-l send-keys 'C-l'

# -- styling -------------------------------------------------------------------

# message
set -g message-fg colour2
set -g message-bg colour0
set -g message-command-fg colour3
set -g message-command-bg colour0

# The panes
set -g pane-active-border-fg "colour7"
set -g pane-border-fg "colour7"

# The statusbar
set -g status-position bottom
set -g status-justify left
set -g status-bg colour0
set -g status-fg colour8
set -g status-left-length 50
set -g status-right-length 50
set -g window-status-current-format "#[fg=colour0]\
	#{?window_zoomed_flag,#[bg=colour2],#[bg=colour4]} #I #W "
set -g window-status-format "#{?window_last_flag,#[bg=colour7]#[fg=colour0],\
	#[bg=colour8]#[fg=colour15]} #I #W "
set -g status-left '#[bg=colour3]#[fg=colour0] #S #[bg=colour0]   '
set -g status-right "#[bg=colour0]#[fg=colour0]\
	#{?client_prefix,#[bg=colour1] PREFIX ,#[bg=colour0] PREFIX }\
	#[bg=colour0] #[bg=colour2]#[fg=colour0] %b %d %a \
	#[bg=colour0] #[bg=colour3]#[fg=colour0] %H:%M "
